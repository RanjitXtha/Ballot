// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender{
  MALE 
  FEMALE
}

model User{
  id      String    @id @default(cuid())
  name String 
  email String @unique
  image String?
  password String
  phone String @unique
  address String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  gender Gender
  votes Vote[]
}

model Election{
  id String @id @default(cuid())
  title String 
  description String
  createdAt DateTime @default(now())
  startTime   DateTime
  endTime     DateTime
  candidates Candidate[]
  votes Vote[]
}

model Candidate{
  id         String    @id @default(cuid())
  name       String
  electionId String
  image String?

  election Election @relation(fields: [electionId], references: [id], onDelete: Cascade)
  vote Vote[]
}

model Vote{
  id          String    @id @default(cuid())
  userId String
  electionId String
  candidateId String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId] , references: [id])
  election Election  @relation(fields: [electionId] , references: [id],onDelete: Cascade)
  candidate Candidate  @relation(fields: [candidateId] , references: [id],onDelete: Cascade)

  @@unique([userId,electionId])
}